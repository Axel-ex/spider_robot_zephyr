/*
 * FINAL CORRECTED Device Tree Overlay for MCPWM LED control on ESP32
 * Target: MCPWM0, Channel 0 (PWM0A), GPIO 25.
 */

/ {
    pwmleds {
        compatible = "pwm-leds";
        fading_led: fading_led {
            // New structure: <&controller_node channel_id period/cycles polarity>
            // We use Channel 0 (which maps to Timer 0, Operator 0, Output A)
            // The period/cycles cell is now required by the binding: use <0> for runtime setting.
            // The full structure is: <&mcpwm0 channel_id period polarity>
            pwms = <&mcpwm0 0 0 PWM_POLARITY_NORMAL>;
        };
    };
};

&mcpwm0 {
    // 1. Enable the controller
    status = "okay"; 


    // 2. Configure the required prescale properties as per the documentation:
    //    We only strictly need the 'prescale' and 'prescale-timer0' for Channel 0.
    //    Setting both to <1> provides the highest possible clock frequency and resolution.
    prescale = <1>;       // Master clock prescaler

    prescale-timer0 = <1>; // Prescaler for Timer 0 (which Channel 0 uses)

    // 3. Configure pinctrl
    pinctrl-0 = <&mcpwm0_op0a_gpio25>;
    pinctrl-names = "default";
    
    // ðŸš¨ IMPORTANT: NO CHILD NODES (op0) HERE! The driver handles the internal structure.
};


&pinctrl {
    mcpwm0_op0a_gpio25: mcpwm0_op0a_gpio25 {
        group1 {
            // Use the macro for Output A on GPIO 25
            pinmux = <MCPWM0_OUT0A_GPIO25>;
            output-enable;
        };
    };
};
